import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Badge } from "@/components/ui/badge";
import { 
  Mail, 
  Send,
  MessageCircle,
  Users,
  Lightbulb,
  Heart,
  CheckCircle,
  Globe
} from "lucide-react";

export default function Contact() {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    subject: "",
    message: "",
    contactType: ""
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSubmitted, setIsSubmitted] = useState(false);

  const contactTypes = [
    { value: "question", label: "General Question", icon: MessageCircle },
    { value: "feedback", label: "Feedback & Suggestions", icon: Lightbulb },
    { value: "partnership", label: "Partnership Inquiry", icon: Users },
    { value: "support", label: "Technical Support", icon: Mail }
  ];

  const handleInputChange = (field, value) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate form submission
    setTimeout(() => {
      setIsSubmitting(false);
      setIsSubmitted(true);
    }, 2000);
  };

  if (isSubmitted) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 flex items-center justify-center py-12 relative overflow-hidden">
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-yellow-400/20 to-orange-500/20 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-br from-cyan-400/20 to-blue-500/20 rounded-full blur-3xl animate-pulse delay-1000"></div>
        </div>
        <div className="max-w-md mx-auto px-4 relative z-10">
          <Card className="text-center bg-white/95 backdrop-blur-sm border-0 shadow-2xl">
            <CardContent className="pt-12 pb-8">
              <div className="w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center mx-auto mb-6 shadow-xl">
                <CheckCircle className="w-8 h-8 text-white" />
              </div>
              <h2 className="text-2xl font-bold text-gray-900 mb-4">
                Message Sent Successfully!
              </h2>
              <p className="text-gray-600 mb-6 leading-relaxed">
                Thank you for reaching out to FinFuture Academy. We've received your message and 
                will respond within 24-48 hours.
              </p>
              <Button 
                onClick={() => setIsSubmitted(false)}
                className="bg-teal-600 hover:bg-teal-700 shadow-lg"
              >
                Send Another Message
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 py-12 relative overflow-hidden">
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-yellow-400/20 to-orange-500/20 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-br from-cyan-400/20 to-blue-500/20 rounded-full blur-3xl animate-pulse delay-1000"></div>
        <div className="absolute top-1/3 right-1/3 w-64 h-64 bg-gradient-to-br from-green-400/15 to-emerald-500/15 rounded-full blur-3xl animate-pulse delay-500"></div>
      </div>
      
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
        {/* Header */}
        <div className="text-center mb-16">
          <Badge className="mb-4 bg-gradient-to-r from-pink-500 to-purple-500 text-white border-0 shadow-xl">
            <Globe className="w-4 h-4 mr-2" />
            Get in Touch
          </Badge>
          <h1 className="text-5xl lg:text-6xl font-bold text-white mb-6">
            Get in Touch
          </h1>
          <p className="text-xl text-purple-100 max-w-3xl mx-auto">
            Have a question, suggestion, or want to partner with us? We'd love to hear from you. 
            Your feedback helps us improve financial education for everyone. âœ¨
          </p>
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          {/* Contact Form */}
          <div className="lg:col-span-2">
            <Card className="bg-white/95 backdrop-blur-sm border-0 shadow-2xl">
              <CardHeader>
                <CardTitle className="flex items-center text-2xl">
                  <Send className="w-6 h-6 mr-3 text-teal-600" />
                  Send Us a Message
                </CardTitle>
                <p className="text-gray-600">
                  We typically respond within 24-48 hours
                </p>
              </CardHeader>
              
              <CardContent>
                <form onSubmit={handleSubmit} className="space-y-6">
                  {/* Contact Type Selection */}
                  <div className="space-y-3">
                    <Label className="text-sm font-medium text-gray-900">
                      What can we help you with?
                    </Label>
                    <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                      {contactTypes.map((type) => (
                        <button
                          key={type.value}
                          type="button"
                          onClick={() => handleInputChange('contactType', type.value)}
                          className={`flex items-center space-x-3 p-3 rounded-lg border-2 transition-all duration-200 ${
                            formData.contactType === type.value
                              ? 'border-teal-300 bg-teal-50 text-teal-700'
                              : 'border-gray-200 hover:border-gray-300 text-gray-600 hover:bg-gray-50'
                          }`}
                        >
                          <type.icon className="w-5 h-5" />
                          <span className="font-medium text-sm">{type.label}</span>
                        </button>
                      ))}
                    </div>
                  </div>

                  {/* Name & Email */}
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div className="space-y-2">
                      <Label htmlFor="name">Name</Label>
                      <Input
                        id="name"
                        type="text"
                        value={formData.name}
                        onChange={(e) => handleInputChange('name', e.target.value)}
                        placeholder="Your full name"
                        required
                        className="bg-gray-50 border-gray-200 focus:border-teal-300 focus:ring-teal-200"
                      />
                    </div>
                    <div className="space-y-2">
                      <Label htmlFor="email">Email</Label>
                      <Input
                        id="email"
                        type="email"
                        value={formData.email}
                        onChange={(e) => handleInputChange('email', e.target.value)}
                        placeholder="your.email@example.com"
                        required
                        className="bg-gray-50 border-gray-200 focus:border-teal-300 focus:ring-teal-200"
                      />
                    </div>
                  </div>

                  {/* Subject */}
                  <div className="space-y-2">
                    <Label htmlFor="subject">Subject</Label>
                    <Input
                      id="subject"
                      type="text"
                      value={formData.subject}
                      onChange={(e) => handleInputChange('subject', e.target.value)}
                      placeholder="Brief description of your message"
                      required
                      className="bg-gray-50 border-gray-200 focus:border-teal-300 focus:ring-teal-200"
                    />
                  </div>

                  {/* Message */}
                  <div className="space-y-2">
                    <Label htmlFor="message">Message</Label>
                    <Textarea
                      id="message"
                      value={formData.message}
                      onChange={(e) => handleInputChange('message', e.target.value)}
                      placeholder="Tell us more about your question, feedback, or suggestion..."
                      rows={6}
                      required
                      className="bg-gray-50 border-gray-200 focus:border-teal-300 focus:ring-teal-200"
                    />
                  </div>

                  <Button
                    type="submit"
                    disabled={isSubmitting || !formData.contactType}
                    className="w-full bg-teal-600 hover:bg-teal-700 text-white font-semibold py-3 text-lg disabled:opacity-50 disabled:cursor-not-allowed shadow-lg"
                  >
                    {isSubmitting ? (
                      <>
                        <div className="animate-spin w-5 h-5 border-2 border-white border-t-transparent rounded-full mr-2"></div>
                        Sending Message...
                      </>
                    ) : (
                      <>
                        Send Message
                        <Send className="w-5 h-5 ml-2" />
                      </>
                    )}
                  </Button>
                </form>
              </CardContent>
            </Card>
          </div>

          {/* Contact Info Sidebar */}
          <div className="space-y-6">
            {/* Quick Info */}
            <Card className="bg-gradient-to-br from-teal-500 to-teal-600 border-0 text-white shadow-2xl">
              <CardContent className="pt-6">
                <Mail className="w-8 h-8 text-teal-100 mb-4" />
                <h3 className="text-lg font-semibold text-white mb-2">
                  Email Us Directly
                </h3>
                <p className="text-teal-100 text-sm mb-3">
                  For general inquiries and support
                </p>
                <p className="text-white font-medium">
                  support@finfutureacademy.org
                </p>
              </CardContent>
            </Card>

            {/* Response Time */}
            <Card className="bg-white/95 backdrop-blur-sm border-0 shadow-2xl">
              <CardContent className="pt-6">
                <CheckCircle className="w-8 h-8 text-green-600 mb-4" />
                <h3 className="text-lg font-semibold text-gray-900 mb-2">
                  Response Time
                </h3>
                <p className="text-gray-600 text-sm">
                  We aim to respond to all messages within 24-48 hours during business days.
                </p>
              </CardContent>
            </Card>

            {/* Mission Reminder */}
            <Card className="bg-gradient-to-br from-purple-500 to-purple-600 border-0 text-white shadow-2xl">
              <CardContent className="pt-6">
                <Heart className="w-8 h-8 text-purple-100 mb-4" />
                <h3 className="text-lg font-semibold text-white mb-2">
                  Our Mission
                </h3>
                <p className="text-purple-100 text-sm leading-relaxed">
                  Making financial education accessible to everyone, especially underserved communities. 
                  Your feedback helps us improve!
                </p>
              </CardContent>
            </Card>

            {/* Student Priority */}
            <Card className="bg-gradient-to-br from-orange-500 to-orange-600 border-0 text-white shadow-2xl">
              <CardContent className="pt-6 text-center">
                <Badge className="mb-3 bg-white/20 text-white border-white/30">
                  ðŸŽ“ Student Priority
                </Badge>
                <h3 className="text-lg font-semibold text-white mb-2">
                  Students First
                </h3>
                <p className="text-orange-100 text-sm">
                  Questions from students and educators receive priority response.
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}

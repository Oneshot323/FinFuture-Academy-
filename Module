import React, { useState, useEffect } from "react";
import { Module } from "@/entities/Module";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { 
  ArrowLeft, 
  Clock, 
  CheckCircle, 
  Download,
  ExternalLink,
  BookOpen,
  Target,
  TrendingUp,
  FileText,
  Calculator,
  Video,
  Link as LinkIcon
} from "lucide-react";

export default function ModulePage() {
  const [module, setModule] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    loadModule();
  }, []);

  const loadModule = async () => {
    try {
      const urlParams = new URLSearchParams(window.location.search);
      const moduleId = urlParams.get('id');
      
      if (!moduleId) {
        setError("Module ID not provided");
        return;
      }

      const modules = await Module.list();
      const foundModule = modules.find(m => m.id === moduleId);
      
      if (!foundModule) {
        setError("Module not found");
        return;
      }

      setModule(foundModule);
    } catch (error) {
      console.error("Error loading module:", error);
      setError("Failed to load module");
    } finally {
      setIsLoading(false);
    }
  };

  const getResourceIcon = (type) => {
    switch (type) {
      case "pdf": return FileText;
      case "template": return Download;
      case "calculator": return Calculator;
      case "video": return Video;
      case "link": return LinkIcon;
      default: return FileText;
    }
  };

  const getDifficultyColor = (difficulty) => {
    switch (difficulty) {
      case "beginner": return "bg-green-100 text-green-700 border-green-200";
      case "intermediate": return "bg-yellow-100 text-yellow-700 border-yellow-200";
      case "advanced": return "bg-red-100 text-red-700 border-red-200";
      default: return "bg-gray-100 text-gray-700 border-gray-200";
    }
  };

  const getTrackInfo = (track) => {
    if (track === "master_money") {
      return {
        title: "Master Money",
        subtitle: "Essential Financial Skills",
        icon: Target,
        color: "text-teal-600",
        bgColor: "bg-teal-50"
      };
    } else {
      return {
        title: "Earn More", 
        subtitle: "Income-Building Strategies",
        icon: TrendingUp,
        color: "text-red-600",
        bgColor: "bg-red-50"
      };
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 flex items-center justify-center relative overflow-hidden">
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-yellow-400/20 to-orange-500/20 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-br from-cyan-400/20 to-blue-500/20 rounded-full blur-3xl animate-pulse delay-1000"></div>
        </div>
        <div className="text-center relative z-10">
          <div className="animate-spin w-16 h-16 border-4 border-white/30 border-t-white rounded-full mx-auto mb-4"></div>
          <p className="text-white text-xl">Loading module...</p>
        </div>
      </div>
    );
  }

  if (error || !module) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 flex items-center justify-center relative overflow-hidden">
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-yellow-400/20 to-orange-500/20 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-br from-cyan-400/20 to-blue-500/20 rounded-full blur-3xl animate-pulse delay-1000"></div>
        </div>
        <div className="text-center relative z-10">
          <BookOpen className="w-16 h-16 text-white/70 mx-auto mb-4" />
          <h2 className="text-2xl font-bold text-white mb-2">Module Not Found</h2>
          <p className="text-purple-200 mb-6">{error || "The requested module could not be found."}</p>
          <Link to={createPageUrl("Curriculum")}>
            <Button className="bg-white text-purple-700 hover:bg-gray-100 shadow-xl">
              <ArrowLeft className="w-4 h-4 mr-2" />
              Back to Curriculum
            </Button>
          </Link>
        </div>
      </div>
    );
  }

  const trackInfo = getTrackInfo(module.track);

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 py-8 relative overflow-hidden">
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-yellow-400/15 to-orange-500/15 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-br from-cyan-400/15 to-blue-500/15 rounded-full blur-3xl animate-pulse delay-1000"></div>
        <div className="absolute top-1/2 right-1/4 w-64 h-64 bg-gradient-to-br from-green-400/10 to-emerald-500/10 rounded-full blur-3xl animate-pulse delay-500"></div>
      </div>
      
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
        {/* Back Navigation */}
        <div className="mb-8">
          <Link to={createPageUrl("Curriculum")}>
            <Button variant="outline" className="text-white border-white/30 hover:bg-white/10 backdrop-blur-sm">
              <ArrowLeft className="w-4 h-4 mr-2" />
              Back to Curriculum
            </Button>
          </Link>
        </div>

        {/* Module Header */}
        <Card className="mb-8 overflow-hidden bg-white/95 backdrop-blur-sm border-0 shadow-2xl">
          <div className={`${trackInfo.bgColor} px-6 py-4`}>
            <div className="flex items-center space-x-3 mb-2">
              <trackInfo.icon className={`w-6 h-6 ${trackInfo.color}`} />
              <span className={`font-medium ${trackInfo.color}`}>
                {trackInfo.title} â€¢ {trackInfo.subtitle}
              </span>
            </div>
          </div>
          
          <CardHeader className="pb-4">
            <div className="flex flex-col md:flex-row md:items-start md:justify-between gap-4">
              <div className="flex-1">
                <CardTitle className="text-3xl font-bold text-gray-900 mb-3">
                  {module.title}
                </CardTitle>
                <p className="text-lg text-gray-600 leading-relaxed">
                  {module.description}
                </p>
              </div>
              
              <div className="flex flex-col md:items-end space-y-2">
                <Badge className={getDifficultyColor(module.difficulty)} variant="outline">
                  {module.difficulty}
                </Badge>
                {module.duration && (
                  <div className="flex items-center text-sm text-gray-500">
                    <Clock className="w-4 h-4 mr-1" />
                    {module.duration}
                  </div>
                )}
                <div className="text-sm text-gray-500">
                  Module {module.order}
                </div>
              </div>
            </div>
          </CardHeader>
        </Card>

        {/* Module Content */}
        <div className="grid lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2 space-y-8">
            {/* Main Content */}
            <Card className="bg-white/95 backdrop-blur-sm border-0 shadow-2xl">
              <CardHeader>
                <CardTitle className="flex items-center text-xl">
                  <BookOpen className="w-5 h-5 mr-2 text-teal-600" />
                  Lesson Content
                </CardTitle>
              </CardHeader>
              <CardContent className="prose max-w-none">
                {module.content ? (
                  <div className="text-gray-700 leading-relaxed whitespace-pre-wrap">
                    {module.content}
                  </div>
                ) : (
                  <div className="text-center py-12 text-gray-500">
                    <BookOpen className="w-12 h-12 mx-auto mb-4 opacity-50" />
                    <p>Content coming soon for this module!</p>
                    <p className="text-sm mt-2">Check back later for detailed lessons and examples.</p>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Key Points */}
            {module.key_points && module.key_points.length > 0 && (
              <Card className="bg-white/95 backdrop-blur-sm border-0 shadow-2xl">
                <CardHeader>
                  <CardTitle className="flex items-center text-xl">
                    <CheckCircle className="w-5 h-5 mr-2 text-green-600" />
                    Key Takeaways
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {module.key_points.map((point, index) => (
                      <div key={index} className="flex items-start space-x-3">
                        <div className="w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                          <CheckCircle className="w-4 h-4 text-green-600" />
                        </div>
                        <p className="text-gray-700 leading-relaxed">{point}</p>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Resources */}
            {module.resources && module.resources.length > 0 && (
              <Card className="bg-white/95 backdrop-blur-sm border-0 shadow-2xl">
                <CardHeader>
                  <CardTitle className="flex items-center text-lg">
                    <Download className="w-5 h-5 mr-2 text-teal-600" />
                    Resources & Tools
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-3">
                  {module.resources.map((resource, index) => {
                    const ResourceIcon = getResourceIcon(resource.type);
                    return (
                      <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                        <div className="flex items-center space-x-3">
                          <ResourceIcon className="w-4 h-4 text-gray-600" />
                          <span className="text-sm font-medium text-gray-900">
                            {resource.title}
                          </span>
                        </div>
                        {resource.url && (
                          <a
                            href={resource.url}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-teal-600 hover:text-teal-700"
                          >
                            <ExternalLink className="w-4 h-4" />
                          </a>
                        )}
                      </div>
                    );
                  })}
                </CardContent>
              </Card>
            )}

            {/* Progress Card */}
            <Card className="bg-gradient-to-br from-teal-500 to-teal-600 border-0 text-white shadow-2xl">
              <CardContent className="pt-6 text-center">
                <CheckCircle className="w-12 h-12 mx-auto mb-4 text-teal-100" />
                <h3 className="font-semibold text-white mb-2">Great Job!</h3>
                <p className="text-sm text-teal-100 mb-4">
                  You're building valuable financial skills.
                </p>
                <Link to={createPageUrl("Curriculum")}>
                  <Button className="w-full bg-white text-teal-600 hover:bg-gray-100 shadow-lg">
                    Continue Learning
                  </Button>
                </Link>
              </CardContent>
            </Card>

            {/* Help Card */}
            <Card className="bg-gradient-to-br from-orange-500 to-orange-600 border-0 text-white shadow-2xl">
              <CardContent className="pt-6 text-center">
                <h3 className="font-semibold text-white mb-2">Need Help?</h3>
                <p className="text-sm text-orange-100 mb-4">
                  Questions about this module? We're here to help!
                </p>
                <Link to={createPageUrl("Help")}>
                  <Button className="w-full bg-white text-orange-600 hover:bg-gray-100 shadow-lg">
                    Get Support
                  </Button>
                </Link>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}
